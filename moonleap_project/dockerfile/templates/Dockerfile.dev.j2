{% trim_newlines keep=1 %}
FROM {{ res.image_name }}

{% for ENVVAR in res.env_vars %}
ENV {{ ENVVAR }}
{% endfor %}

{% for ENVVAR in res.env_vars_dev %}
ENV {{ ENVVAR }}
{% endfor %}

{% for PKG in res.service.get_pkg_names() %}{% if loop.first %}
# install pkg dependencies
RUN {{ res.docker_image.install_command }} \
{% endif %}{% if not loop.last %}
    {{ PKG }} \
{% else %}
    {{ PKG }}
{% endif %}{% endfor %}

{% for PKG in res.service.get_pip_pkg_names() %}{% if loop.first %}
# install pip dependencies
RUN {{ res.docker_image.pip }} install \
{% endif %}{% if not loop.last %}
    {{ PKG }} \
{% else %}
    {{ PKG }}
{% endif %}{% endfor %}

{% for PKG in res.service.get_pkg_names(is_dev=True) %}{% if loop.first %}
# install dev pkg dependencies
RUN {{ res.docker_image.install_command }} \
{% endif %}{% if not loop.last %}
    {{ PKG }} \
{% else %}
    {{ PKG }}
{% endif %}{% endfor %}

{% for PKG in res.service.get_pip_pkg_names(is_dev=True) %}{% if loop.first %}
# install dev pip dependencies
RUN {{ res.docker_image.pip }} install \
{% endif %}{% if not loop.last %}
    {{ PKG }} \
{% else %}
    {{ PKG }}
{% endif %}{% endfor %}

# TODO: automate this
# create a python venv that we can easily store inside a docker volume
# RUN python3 -m venv /app/env
# ENV PATH="/app/env/bin:${PATH}"

WORKDIR {{ res.service.install_dir }}/src
{% end_trim_newlines %}