{% magic_with res.item_name as yellowTulip %}
{% magic_with res.module.name as gardenFlowers %}
import * as React from 'react';
import { values } from 'lodash/fp';
import { reaction } from 'mobx';

import { YellowTulipsContainer } from 'src/gardenFlowers/YellowTulipsCtr';
import { CtrProvider } from 'react-default-props-context';
import { useStore } from 'src/app/components';

type PropsT = React.PropsWithChildren<{}>;

// Note: don't observe this with MobX
export const YellowTulipsCtrProvider: React.FC<PropsT> = (props: PropsT) => {
  const { yellowTulipsStore } = useStore();

  const createCtr = () => {
    return new YellowTulipsContainer({
      yellowTulipsStore: yellowTulipsStore,
    });
  };

  const updateCtr = (ctr: YellowTulipsContainer) => {
    reaction(
      () => ({
        yellowTulipById: yellowTulipsStore.yellowTulipById
      }),
      ({ yellowTulipById }) => {
        ctr.inputs.setYellowTulips(values(yellowTulipById));
      },
      {
        fireImmediately: true,
      }
    );
  };

  const getDefaultProps = (ctr: YellowTulipsContainer) => {
    return {
      yellowTulipsCtr: () => ctr,
      yellowTulip: () => ctr.highlight.item,
      yellowTulipRS: () => yellowTulipsStore.yellowTulipByIdRS,
      yellowTulips: () => ctr.outputs.display,
      yellowTulipsRS: () => yellowTulipsStore.yellowTulipByIdRS,
      yellowTulipsSelection: () => ctr.selection,
    };
  };

  return (
    <CtrProvider
      createCtr={createCtr}
      updateCtr={updateCtr}
      destroyCtr={(ctr) => ctr.destroy()}
      getDefaultProps={getDefaultProps}
    >
      {props.children}
    </CtrProvider>
  );
};
{% end_magic_with %}
{% end_magic_with %}
