{% magic_with substore.module.name as gardenFlowers %}
{% magic_with item_type.name as yellowTulip %}
import { gql, ApolloServer } from 'apollo-server';
import faker from 'faker';

{% for substore in res.service.app_module.app_store.substores %}
import { typeDefsStr as gardenFlowersTypeDefsStr } from '../../src/gardenFlowers/schema';
{% endfor %}

const rootQueryStr = `
  type Query {
{% for substore in res.service.app_module.app_store.substores %}
{% for item_type in substore.item_types %}
    yellowTulips: [YellowTulip]
{% endfor %}
{% endfor %}
  }
`;

{% for substore in res.service.app_module.app_store.substores %}{% if loop.first %}
const typeDefsStr =
{% endif %}{% if not loop.last %}
  gardenFlowersTypeDefsStr +
{% else %}
  gardenFlowersTypeDefsStr +
  rootQueryStr;
{% endif %}{% endfor %}

const mocks = {
{% for substore in res.service.app_module.app_store.substores %}
{% for item_type in substore.item_types %}
  YellowTulip: () => ({
    name: faker.name.findName(),
  }),
{% endfor %}
{% endfor %}
};

const server = new ApolloServer({
  typeDefs: gql(typeDefsStr),
  mocks,
});

server.listen().then(({ url }: any) => {
  console.log(`Mock graphql server ready at ${url}`);
  console.log(`Using schema ${typeDefsStr}`);
});

{% end_magic_with %}
{% end_magic_with %}