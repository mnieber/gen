{% magic_with substore.name as RedRose %}
import { observable, makeObservable } from 'mobx';
{% if res.module.service.api_module %}
import { Api } from 'src/api/Api';
import { storeConnectsToApi } from 'src/app/AppStore/policies';
{% endif %}
{% for substore in res.substores %}
import { RedRose } from '{{ substore.module_path }}/RedRose';
{% endfor %}
{% if res.policies %}
import * as Policies from '{{ res.module_path }}/policies';
{% endif %}

export class AppStore {
{% for substore in res.substores %}
  @observable redRose: RedRose;
{% endfor %}
{% if res.module.service.api_module %}
  @observable api: Api = new Api();
{% endif %}

  constructor() {
    makeObservable(this);

{% for substore in res.substores %}
    this.redRose = new RedRose();
{% endfor %}

    this.applyPolicies();
  }

  applyPolicies() {
{% if res.module.service.api_module %}
{% for substore in res.substores %}
  storeConnectsToApi(this.redRose, this.api);
{% endfor %}
{% endif %}
{% for policy in res.policies %}
    Policies.{{ policy.name }}()(this);
{% endfor %}
  }
}
{% end_magic_with %}