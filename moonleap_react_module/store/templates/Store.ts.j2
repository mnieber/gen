{% magicwith item_type.name as yellowTulip %}
{% magicwith item.name as blueDaisy %}
{% magicwith res.module.name as gardenFlowers %}
import { action, observable, makeObservable } from 'mobx';
import { forEach } from 'lodash/fp';
import { RST, resetRS, updateRes } from 'src/utils/RST';
import * as gardenFlowersApi from 'src/gardenFlowers/api'

{% for item_type in res.item_types %}
import { YellowTulipT, YellowTulipByIdT } from 'src/gardenFlowers/types'
{% endfor %}
{{ res.javascript_import_lines }}

export class {{ res.name }} {

{% for item_type in res.item_types %}
  @observable yellowTulipById: YellowTulipByIdT = {};
  @observable yellowTulipByIdRS: RST = resetRS();
{% endfor %}
{% for item in res.items %}
  @observable blueDaisy?: BlueDaisyT = undefined;
{% endfor %}

  constructor() {
    makeObservable(this);
  }

{% for item_type in res.item_types %}
  @action loadYellowTulips = () => {
    updateRes(
      this,
      'yellowTulipByIdRS',
      () => {
        return gardenFlowersApi.getYellowTulips();
      },
      (response: any) => {
        this.addYellowTulips(response.yellowTulips);
      },
      (message: any) => {
        console.log(message);
        return 'Oops, there was an error getting the yellowTulips data';
      }
    );
  }

  @action addYellowTulips = (yellowTulips: YellowTulipT[]) => {
    forEach((yellowTulip: YellowTulipT) => {
      this.yellowTulipById[yellowTulip.id] = yellowTulip;
    }, yellowTulips);
  }

  @action saveYellowTulip = (values: any) => {
    gardenFlowersApi.saveYellowTulip(values);
  }
{% endfor %}

}
{% endmagicwith %}
{% endmagicwith %}
{% endmagicwith %}