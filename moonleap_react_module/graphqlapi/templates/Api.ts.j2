{% magic_with item_name as yellowTulip %}
{% magic_with item_list.item_name as redRose %}
{% magic_with item.item_name as blueDaisy %}
import { normalize, schema } from 'normalizr';
import { ApiBase } from 'src/api/ApiBase';
import { ObjT } from 'src/utils/types';

{% for item_name in res.item_names %}
const yellowTulip = new schema.Entity('yellowTulip');
{% endfor %}

{% for item_list in res.item_lists %}
const redRoseList = new schema.Array(redRose);
{% endfor %}

export class Api extends ApiBase {
{% for item_list in res.item_lists %}
  getRedRoses() {
    return this._doQuery(
      'getRedRoses',
      `query getRedRoses {
        redRoses {
          id
          name
        }
      }`,
      {},
      (response: ObjT) => normalize(response.redRoses, redRoseList).entities,
      (error: ObjT) => error.response.errors[0].message
    );
  }

{% endfor %}
{% for item in res.items %}
  getBlueDaisy() {
    return this._doQuery(
      'getBlueDaisy',
      `query getBlueDaisy {
        blueDaisy {
          id
          name
        }
      }`,
      {},
      (response: ObjT) => normalize(response.blueDaisy, blueDaisy).entities,
      (error: ObjT) => error.response.errors[0].message
    );
  }

{% endfor %}
}
{% end_magic_with %}
{% end_magic_with %}
{% end_magic_with %}
