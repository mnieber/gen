{% magic_with res.item_name as yellowTulip %}
{% magic_with res.module.name as gardenFlowers %}
import classnames from 'classnames';
import { always, flow, map } from 'lodash/fp';
import { observer } from 'mobx-react-lite';
import { FC, useDefaultProps } from 'react-default-props-context';
import { YellowTulipListViewItem } from 'src/gardenFlowers/components';
import { YellowTulipT } from 'src/gardenFlowers/types'
import { getResourceView } from 'src/utils/components';
import './YellowTulipListView.scss';

type PropsT = {
  className?: any;
};

type DefaultPropsT = {
  yellowTulips: YellowTulipT[]
  yellowTulipsResUrl: string
};

export const YellowTulipListView: FC<PropsT, DefaultPropsT> = observer((p: PropsT) => {
  const props = useDefaultProps<PropsT, DefaultPropsT>(p);

  const yellowTulipDivs = flow(
    always(props.yellowTulips),
    map((x) => (
      <YellowTulipListViewItem
        key={x.id}
        yellowTulip={x}
      />
    ))
  )();

  const noItems = <h2>There are no yellowTulips</h2>;

  const resourceView = getResourceView({ resourceUrl: props.yellowTulipsResUrl });
  if (resourceView) return resourceView;

  return (
    <div
      className={classnames(
        "YellowTulipListView flex flex-col w-full",
        props.className
      )}
    >
      {yellowTulipDivs.length && yellowTulipDivs}
      {!yellowTulipDivs.length && noItems}
    </div>
  );
});
{% end_magic_with %}
{% end_magic_with %}
