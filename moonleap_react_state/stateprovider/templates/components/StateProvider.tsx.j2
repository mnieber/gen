{% magic_with res.item_name as yellowTulip %}
{% magic_with res.module.name as gardenFlowers %}
import * as React from 'react';
import { values } from 'lodash/fp';
import { reaction } from 'mobx';

import { YellowTulipsState } from 'src/gardenFlowers/YellowTulipsState';
import { StateProvider } from 'react-default-props-context';
import { useStore } from 'src/app/components';

type PropsT = React.PropsWithChildren<{}>;

// Note: don't observe this with MobX
export const YellowTulipsStateProvider: React.FC<PropsT> = (props: PropsT) => {
  const { yellowTulipsStore } = useStore();

  const createState = () => {
    return new YellowTulipsState({
      yellowTulipsStore: yellowTulipsStore,
    });
  };

  const updateState = (state: YellowTulipsState) => {
    reaction(
      () => ({
        yellowTulipById: yellowTulipsStore.yellowTulipById
      }),
      ({ yellowTulipById }) => {
        state.inputs.yellowTulips = values(yellowTulipById);
      },
      {
        fireImmediately: true,
      }
    );
  };

  const getDefaultProps = (state: YellowTulipsState) => {
    return {
      yellowTulipsState: () => state,
      yellowTulip: () => state.highlight.item,
      yellowTulipRS: () => yellowTulipsStore.yellowTulipByIdRS,
      yellowTulips: () => state.outputs.display,
      yellowTulipsRS: () => yellowTulipsStore.yellowTulipByIdRS,
      yellowTulipsSelection: () => state.selection,
    };
  };

  return (
    <StateProvider
      createState={createState}
      updateState={updateState}
      destroyState={(state) => state.destroy()}
      getDefaultProps={getDefaultProps}
    >
      {props.children}
    </StateProvider>
  );
};
{% end_magic_with %}
{% end_magic_with %}
