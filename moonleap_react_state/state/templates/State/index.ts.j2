{% magic_with res.name as yellowTulip %}
{% magic_with res.module.name as gardenFlowers %}
{% magic_with item_name as redRose %}
import { setCallbacks } from 'aspiration';
import {
  getm,
  mapDataToFacet,
  facet,
  installPolicies,
  registerFacets,
  ClassMemberT as CMT,
} from 'skandha';
import { makeCtrObservable } from 'skandha-mobx';
import { getIds } from 'src/utils/ids.ts';
import * as Facets from 'skandha-facets';
import * as FacetPolicies from 'skandha-facets/policies';
{% for behavior in res.behaviors %}
{{ behavior.imports_section }}
{% endfor %}

import { YellowTulipStore } from 'src/gardenFlowers/YellowTulipStore';
import { Inputs } from 'src/gardenFlowers/YellowTulipState/facets/Inputs';
import { Outputs } from 'src/gardenFlowers/YellowTulipState/facets/Outputs';
import * as Policies from './policies';
import * as Handlers from './handlers';

type PropsT = {
  yellowTulipStore: YellowTulipStore;
};

export class YellowTulipState {
{{ res.constructor_section }}

{% for item_name, bvrs in res.bvrs_by_item_name.items() %}
  {{ item_name | plural }} = {
{% for bvr in bvrs %}
{{ bvr.constructor_section }}
{% endfor %}
  }

  _setRedRosesCallbacks(props: PropsT) {
    const ctr = this.redRoses;

{% for bvr in bvrs %}
{{ bvr.callbacks_section }}
{% endfor %}
  }

  _applyRedRosesPolicies(props: PropsT) {
{{ res.declare_policies_section(item_name) }}
{% for bvr in res.behaviors %}
{{ bvr.declare_policies_section }}
{% endfor %}

    const policies = [
{{ res.policies_section }}
{% for bvr in res.behaviors %}
{{ bvr.policies_section }}
{% endfor %}
    ];
  }
{% endfor %}

  constructor(props: PropsT) {
{% for item_name, bvrs in res.bvrs_by_item_name.items() %}

    registerFacets(this.redRoses);
    this._setRedRosesCallbacks(props);
    this._applyRedRosesPolicies(props);
    makeCtrObservable(this.redRoses);
{% endfor %}
  }
}
{% end_magic_with %}
{% end_magic_with %}
{% end_magic_with %}
