{% magic_with _.component.item_name as myItem %}
{% magic_with _.component.name as MyListView %}
    if (!isLoaded(props.myItems)) {
      return UIkit && <div data-uk-spinner className=""></div>;                                 {% ?? _.service.uikit %}
      return null;                                                                              {% ?? not _.service.uikit %}
    }

    const handleClick = new ClickToSelectItems({                                                {% if __.selection_bvr %}
      selection: props.myItemsSelection
    });                                                                                         {% endif %}

    const myItemDivs = R.pipe(
      R.always(props.myItems),
      R.map((myItem: MyItemT) => {
        return (
          <MyListViewItem
            key={myItem.id}
            myItem={myItem}
            isSelected={myItem && props.myItemsSelection.ids.includes(myItem.id)}            {% ?? __.selection_bvr %}
            isHighlighted={myItem && props.myItemsHighlight.id === myItem.id}                {% ?? __.selection_bvr %}
            dragState={dragState(props.myItemsDragAndDrop.hoverPosition, myItem.id)}          {% ?? __.drag_and_drop_bvr %}
            onDelete={() => props.myItemsDeletion.delete([myItem.id])}                        {% ?? __.deletion_bvr %}
            {...handleClick.handle(myItem.id)}                                                 {% ?? __.selection_bvr %}
            {...props.myItemsDragAndDrop.handle(myItem.id)}                                   {% ?? __.drag_and_drop_bvr %}
          />
        );
      })
    )();

    const noItems = <h2>There are no myItems</h2>;

{% end_magic_with %}
{% end_magic_with %}