{% magic_with __.state.name as MyState %}
{% magic_with query.name as myQuery %}
{% magic_with mutation.name as myMutation %}
{% magic_with named_item.typ.item_name as myNamedItem %}
import { reaction } from 'mobx';
import { observer } from 'mobx-react-lite';
import * as R from 'ramda';
import React from 'react';
import { NestedDefaultPropsContext } from 'react-default-props-context';
import { maybe, initRS, setToUpdating } from 'src/api/ResourceState';
import { useMyQuery } from 'src/api/queries';                                                   {% for query in __.queries %}{% endfor %}
import { useMyMutation } from 'src/api/mutations';                                              {% for mutation in __.mutations %}{% endfor %}
import { defaultProps as dps, withDefaultProps } from 'src/app/defaultProps';
import { flags } from 'src/app/flags';
import { lookUp, getIds } from 'src/utils/ids';
import { {{ type_spec.type_name }}T } from 'src/api/types/{{ type_spec.type_name }}T';          {% !! type_spec in __.type_specs_to_import %}
import { MyState } from 'src/{{ __.state.state_provider.module.module_path }}/MyState';         {% ?? __.state %}
import { log } from 'src/utils/logging';

type PropsT = React.PropsWithChildren<{
  {{ res.typ.ts_var }}: {{ res.typ.ts_type }}                                                   {% !! res in _.component.named_props %}
}>;

const DefaultProps = {
  ...dps.{{ res.typ.ts_var }},                                                                  {% !! res in _.component.named_default_props %}
};

export const {{ _.component.name }} = observer(
  withDefaultProps((props: PropsT & typeof DefaultProps) => {
    const myQuery = useMyQuery();                                                               {% !! query in __.queries %}
    const myMutation = useMyMutation();                                                         {% !! mutation in __.mutations %}

    const [state] = React.useState(() => new MyState({                                          {% if __.state %}
{% include_snippet "__moonleap__/stateConstructor.tsx.j2" %}
    }));                                                                                        {% endif %}

    React.useEffect(() => {                                                                     {% if __.state %}
{% include_snippet "__moonleap__/stateProviderReaction.tsx.j2" %}
    });                                                                                         {% endif %}

    const getDefaultPropsContext = () => {
      const result = { defaultProps: {} };

      result.defaultProps = {
        ...result.defaultProps,
{% include_snippet "__moonleap__/stateProviderReturnValues.tsx.j2" %}
      };

      return result;
    };

    return (
      <NestedDefaultPropsContext value={getDefaultPropsContext()}>
        {props.children}
      </NestedDefaultPropsContext>
    );
  }, DefaultProps)
);
{% end_magic_with %}
{% end_magic_with %}
{% end_magic_with %}
{% end_magic_with %}
