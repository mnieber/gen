{% magic_with myEditingBvr = editing_bvr.ts_var %}
{% magic_with myItem = item_name %}
{% magic_with myField = field.dot_name %}
{% magic_with postMyMutation = mutation.name %}

{% section imports %}
import * as R from 'ramda';
import {
  FormStateProvider,
  HandleValidateArgsT,
  HandleSubmitArgsT,
  HandleCancelArgsT,
  unflatten
} from 'react-form-state-context';
import { createUUID } from '/src/utils/ids';
import { MyItemT } from '/src/api/types/MyItemT';
import { rowSkewer } from '/src/frames/components';
import {
  CancelButton,
  GlobalError,
  SaveButton,
} from '/src/forms/components';
{% end_section %}


{% section div_open %}
    <FormStateProvider
        initialValues={initialValues}
        initialErrors={initialErrors}
        handleValidate={handleValidate}
        handleSubmit={handleSubmit}
        handleCancel={handleCancel}
    >
{% end_section %}


{% section lines %}
    <GlobalError />
    <div className={cn(rowSkewer, "self-end")}>
      <CancelButton
        label="Cancel"
        disabled={false}
      />
      <SaveButton
        label="Save"
        disabled={false}
      />
    </div>
{% end_section %}


{% section div_close %}
    </FormStateProvider>
{% end_section %}


{% section preamble %}
    const initialValues = {
      // MOONLEAP TODO
    };
    const initialErrors = {};
    const handleValidate = ({values, setError} : HandleValidateArgsT) => {};
    const handleSubmit = ({ formState, values }: HandleSubmitArgsT) => {
      return Promise.resolve().then(() => {
        formState.reset(initialValues, initialErrors);
      });
    };
    const handleCancel = ({ formState }: HandleCancelArgsT) => {};
    {{ ""}}
{% end_section %}
