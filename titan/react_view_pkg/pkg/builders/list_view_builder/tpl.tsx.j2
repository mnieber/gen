{% magic_with myItem = __item_name %}
{% magic_with Blah = lvi_component_name %}

{% section imports %}
import { MyItemT } from 'src/api/types/MyItemT';
import {
    useSelectionUIConnector,                                                                  {% ?? bvrs_has_selection %}
    useHighlightUIConnector,                                                                  {% ?? bvrs_has_highlight and not bvrs_has_selection %}
    useDragAndDropUIConnector,                                                                {% ?? bvrs_has_drag_and_drop %}
} from 'skandha-mobx/hooks';
import { createOnSelectItemHandler } from 'src/routes/utils';                                 {% ?? update_url %}
import { useMenuHandler } from 'src/frames/hooks/useMenuHandler';                             {% ?? context_menu %}
{% end_section %}


{% section props %}
    updateUrl?: (myItem: MyItemT) => void;                                                    {% ?? update_url %}
{% end_section %}


{% section preamble_hooks %}
const dragAndDropUIConnector = useDragAndDropUIConnector(                                     {% if bvrs_has_drag_and_drop %}
    props.myItemsDragAndDrop
);                                                                                            {% endif %}
const selectionUIConnector = useSelectionUIConnector(                                         {% if bvrs_has_selection %}
    props.myItemsSelection,
    {
      itemSelector: '.Blah',
      onSelectItem: createOnSelectItemHandler(props.myItems, props.updateUrl),                {% ?? update_url %}
    },
    [
      props.myItems, props.updateUrl                                                          {% ?? update_url %}
    ]
);                                                                                            {% endif %}
const highlightUIConnector = useHighlightUIConnector(                                         {% if bvrs_has_highlight and not bvrs_has_selection %}
    props.myItemsHighlight,
    {
      itemSelector: '.Blah',
      onSelectItem: createOnSelectItemHandler(props.myItems, props.updateUrl),                {% ?? update_url %}
    },
    [
      props.myItems, props.updateUrl                                                          {% ?? update_url %}
    ]
);                                                                                            {% endif %}
{{ "" }}
{% end_section %}


{% section preamble %}
const noItems = <h2>There are no myItems</h2>;

const myItemDivs = {{ __items_expr }}.map((myItem{% if context_menu %}, idx{% endif %}) => {
  {{ child_widget_div }}
});
{{ "" }}

{% end_section %}


{% section lines %}
{myItemDivs.length > 0 && myItemDivs}
{myItemDivs.length === 0 && noItems}
{% end_section %}
