import { GraphQLClient } from 'graphql-request';

export const graphqlHostUrl = window.location.host.startsWith('localhost')
  ? process.env.REACT_APP_LOCALHOST_GQL_ENDPOINT
  : process.env.REACT_APP_BACKEND_GQL_ENDPOINT ?? '';

function _createClient() {
  if (!graphqlHostUrl) throw Error('No graphql endpoint was configured');

  const authToken = getToken();
  return new GraphQLClient(graphqlHostUrl, {
    headers: authToken
      ? {
          Authorization: 'JWT ' + authToken,
        }
      : {},
  });
}

export const setToken = (authToken: string, refreshToken?: string) => {
  localStorage.setItem('authToken', authToken);
  if (refreshToken !== undefined) {
    localStorage.setItem('refreshToken', refreshToken);
  }
  _graphqlClient = _createClient();
};

export const getToken = () => {
  return localStorage.getItem('authToken');
};

export const getRefreshToken = () => {
  return localStorage.getItem('refreshToken');
};

export function doQuery(query: string, variables: any) {
  return graphqlClient().request(query, variables);
}

let _graphqlClient = _createClient();

export const graphqlClient = () => _graphqlClient;
