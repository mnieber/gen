{% magic_with myContainer = bvr.container.name %}
{% magic_with listItem = data.item_list.item_name %}
{% magic_with MyState = state.name %}
{% magic_with singleItem = data.item.item_name %}
import { stub, withDefaultProps } from 'react-default-props-context';
import { {{ bvr.name }} } from 'skandha-facets';                                          {% !! bvr in __.skandha_bvrs %}
import { {{ item_name|u0 }}T } from '/src/api/types/{{ item_name|u0 }}T';                 {% !! item_name in __.item_names %}
import { MyState } from '/src/{{ state.module.name }}/MyState';                           {% !! state in __.provided_states %}
export { stub, withDefaultProps } from 'react-default-props-context';

// This is a workaround for a bug in webpack
!withDefaultProps && (console as any).log(withDefaultProps);

const dpsStates = {                                                                       {% if __.provided_states %}
    myState: {                                                                            {% for state in __.provided_states|sort(attribute="name") %}
      myState: stub as MyState,
    },                                                                                    {% endfor %}
}                                                                                         {% endif %}

const dps{{ container_name|u0 }} = {                                                      {% for container_name, data in __.provided_data.items() %}
    listItems: {                                                                          {% if data.item_list %}
      listItems: stub as ListItemT[],
    },                                                                                    {% endif %}
    singleItem: {                                                                         {% if data.item %}
      singleItem: stub as SingleItemT,
    },                                                                                    {% endif %}
    myContainer{{ bvr.facet_name }}: {                                                    {% for bvr in data.bvrs|sort(attribute="name") %}
      myContainer{{ bvr.facet_name }}: stub as {{ bvr.interface_name or bvr.name }},
    },                                                                                    {% endfor %}
};
{{ "" }}                                                                                  {% endfor %}

export const defaultProps = {
    ...{{ section_name }},                                                                {% !! section_name in __.section_names() %}
};

export const dps = defaultProps;
