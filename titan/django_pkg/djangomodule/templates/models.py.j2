{% magic_with my_field = field.name %}
{% magic_with MyModel = model.name %}
{% magic_with MyThroughModel = field.target %}

import uuid                                                                                             {% clean_up_py_imports %}
from django.db import models
from django.utils.text import slugify
from app.utils.tags import create_empty_tags
from martor.models import MartorField
from {{ type_spec.django_module.module_path }}.models import {{ type_spec.type_name }}                  {% !! type_spec in __.type_specs_to_import %}
from app.utils.validate_file import validate_image_file
from app.models import Entity
from app.tr import tr                                                                                   {% if _.django_app.use_translation %}
from app.utils.case import u0                                                                           {% endif %}
                                                                                                        {% end_clean_up_py_imports %}

class MyModel(                                                                                          {% for model in __.django_models %}
    Entity                                                                                              {% ?? model.type_spec.is_entity %}
    models.Model                                                                                        {% ?? not model.type_spec.is_entity %}
):
    class Meta:                                                                                         {% min_lines count=2 %}
        indexes = [                                                                                     {% if model.indexed_fields %}
            models.Index(fields=["my_field"])                                                           {% !! field in model.indexed_fields %}
        ]                                                                                               {% endif %}
        ordering = ["sort_pos"]                                                                         {% ?? model.type_spec.is_sorted %}
        verbose_name = tr("{{ model.kebab_name }}")                                                     {% if _.django_app.use_translation %}
        verbose_name_plural = tr("{{ model.kebab_name|plural }}")                                       {% endif %}
                                                                                                        {% end_min_lines %}
    my_field = {{ field.body(model) }}                                                                  {% !! field in __.fields(model) %}

    def save(self, *args, **kwargs):                                                                    {% if model.slug_fields %}
        if self.my_field is None:                                                                       {% for field in model.slug_fields %}{% min_lines count=2 %}
            self.my_field = slugify(self.{{ field.slug_src }})                                          {% ?? field.slug_src %}{% end_min_lines %}{% endfor %}
        super().save(*args, **kwargs)                                                                   {% endif %}

    def __str__(self):
        return f"{u0(tr('{{ model.kebab_name }}'))}: {self.id}"                                         {% ?? _.django_app.use_translation %}
        return f"MyModel: {self.id}"                                                                    {% ?? not _.django_app.use_translation %}

                                                                                                        {% endfor %}
