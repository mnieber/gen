import { normalize, schema } from 'normalizr';
import { apiBase } from 'src/api/ApiBase';
import { ObjT } from 'src/utils/types';
{{ sections.schema_imports() }}

export const {{ _.output_schema_name }} = new schema.Entity('{{ _.output_schema_name }}');
{{ sections.query_output_schema_fields() }}

export const {{ res.fun_name }} = ({{ sections.javascript_args() }}) => {
  return apiBase.doQuery(
    '{{ res.fun_name }}',
    `query {{ res.name }}{{ sections.ts_graphql_query_args(True) }} {
{% for output_field_spec in res.outputs_type_spec.field_specs %}
        {{ output_field_spec.name }}{{ sections.ts_graphql_query_args(False) }} {
{{ sections.ts_graphql_query_body(output_field_spec) }}
        }
{% endfor %}
    }`,
    {
{{ sections.graphql_variables() }}
    },
    (response: ObjT) => {
      return normalize(response, {{ _.output_schema_name }}).entities;
    },
    (error: ObjT) => {
      return error.response.errors[0].message;
    }
  );
}